{
  "comments": [
    {
      "key": {
        "uuid": "df47b5f3_1418f545",
        "filename": "functions.cpp",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1000392
      },
      "writtenOn": "2021-11-15T15:45:02Z",
      "side": 1,
      "message": "I do not understand why we would ever label a lid mapping as \"_RT\" here. Haven\u0027t we determined that this json entry has a suffix of \u0027.iplTime\u0027 for the element_name field ?",
      "range": {
        "startLine": 340,
        "startChar": 0,
        "endLine": 342,
        "endChar": 62
      },
      "revId": "9cbc06b10d2738f7c2e3472cd447612768739f1d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58e7a1bc_b110ef05",
        "filename": "functions.cpp",
        "patchSetId": 1
      },
      "lineNbr": 342,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-11-15T20:31:22Z",
      "side": 1,
      "message": "Yeah, this is to account for the case where the json has a runtime entry before an ipl entry, example of json content:\n1. HBD.P10\u003dA.lid\n- This causes an HBD\u003dA.lid entry to be created first.\n2. HBD.P10.iplTIme\u003dB.lid\n- Since this is an iplTime entry, we need to overwrite HBD with HBD\u003dB.lid, but also we can\u0027t loose the A.lid info, so that\u0027s why we need to copy it first to HBD_RT\u003dA.lid here because we only parse the json once.",
      "parentUuid": "df47b5f3_1418f545",
      "range": {
        "startLine": 340,
        "startChar": 0,
        "endLine": 342,
        "endChar": 62
      },
      "revId": "9cbc06b10d2738f7c2e3472cd447612768739f1d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}